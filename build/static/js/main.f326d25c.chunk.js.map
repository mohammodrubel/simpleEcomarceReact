{"version":3,"sources":["images/logo.png","components/Header.js","utilities/fakedb.js","components/Product/Product.js","components/Cart/Cart.js","components/Shop/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","href","getDb","localStorage","getItem","updateDb","cart","setItem","JSON","stringify","Product","props","product","img","name","price","seller","shipping","stock","star","starCount","element","icon","faShoppingCart","readonly","onClick","handleAddToCart","Cart","totalQuantity","total","quantity","tax","grandTotal","toFixed","Shop","useState","products","setProducts","setCart","displayProduct","setDisplayProduct","useEffect","fetch","then","Response","json","data","length","saveCart","exists","parse","getStoredCart","storedCart","key","addedProduct","find","push","newCart","id","shopping_cart","newCount","addToDb","onChange","event","searchText","target","value","mathProduct","filter","toLowerCase","includes","type","placeholder","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,G,MAAA,IAA0B,kC,eCqB1BA,EAjBA,WACX,OACI,sBAAKC,UAAU,SAAf,UAEI,qBAAKC,IAAKC,EAAMF,UAAU,OAAOG,IAAI,KAErC,gCACI,mBAAGC,KAAK,QAAR,kBACA,mBAAGA,KAAK,SAAR,mBACA,mBAAGA,KAAK,aAAR,uBACA,mBAAGA,KAAK,QAAR,kBACA,mBAAGA,KAAK,aAAR,8B,eCKVC,EAAQ,kBAAMC,aAAaC,QAAQ,kBACnCC,EAAW,SAAAC,GACfH,aAAaI,QAAQ,gBAAiBC,KAAKC,UAAUH,K,wCCWxCI,EA1BC,SAACC,GAEb,MAA8DA,EAAMC,QAA7DC,EAAP,EAAOA,IAAIC,EAAX,EAAWA,KAAKC,EAAhB,EAAgBA,MAAeC,GAA/B,EAAsBC,SAAtB,EAA+BD,QAAsBE,GAArD,EAAsCC,KAAtC,EAA2CC,UAA3C,EAAqDF,OAC/CG,EAAU,cAAC,IAAD,CAAiBC,KAAMC,MACvC,OACI,sBAAK1B,UAAU,UAAf,UACI,qBAAK,iBAAL,SAEI,qBAAKC,IAAKe,EAAKb,IAAI,OAIvB,sBAAKH,UAAU,cAAf,UAEI,oBAAIA,UAAU,eAAd,SAA8BiB,IAC9B,oCAAOE,KACP,wCAAWD,KACX,sCAASG,EAAT,iCAEA,cAAC,IAAD,CAAQM,UAAQ,EAAhB,eACA,yBAASC,QAAS,kBAAKd,EAAMe,gBAAgBf,EAAMC,UAAUf,UAAU,MAAvE,UAA8EwB,EAA9E,yBCKDM,G,MA5BF,SAAChB,GAEN,IAFgB,EAERL,EAASK,EAATL,KAEAsB,EAAgB,EAChBC,EAAQ,EALA,cAMcvB,GANd,IAMR,2BAA2B,CAAC,IAAjBI,EAAgB,QAClBA,EAAQoB,WACTpB,EAAQoB,SAAW,GAEvBD,GAAiBnB,EAAQK,MAAQL,EAAQoB,SACzCF,GAA8BlB,EAAQoB,UAXlC,8BAahB,IACMC,EAA0B,IAAnBF,EADY,GAEnBG,EAAaH,EAFM,EAEYE,EAEzC,OACI,gCACI,iDACA,8CAAiBH,KACjB,wCAAWC,EAAMI,QAAQ,MACzB,sCAASF,EAAIE,QAAQ,MACrB,6CAAgBD,EAAWC,QAAQ,WCqDhCC,G,MA1EF,WAET,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAuBF,mBAAS,IAAhC,mBAAO7B,EAAP,KAAYgC,EAAZ,KAEA,EAA2CH,mBAAS,IAApD,mBAAOI,EAAP,KAAsBC,EAAtB,KAGAC,qBAAU,WAENC,MAAM,mBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFT,EAAYS,GACZN,EAAkBM,QAIzB,IAGDL,qBAAU,WAEN,GAAGL,EAASW,OAAO,CACf,IAAMC,EHMI,WACpB,IAAMC,EAAS/C,IACf,OAAO+C,EAASzC,KAAK0C,MAAMD,GAAU,GGRVE,GACXC,EAAa,GAFJ,WAGJC,GACP,IAAMC,EAAelB,EAASmB,MAAK,SAAA3C,GAAO,OAAIA,EAAQyC,MAAQA,KAC9D,GAAGC,EAAa,CACZ,IAAMxB,EAAWkB,EAASK,GAC1BC,EAAaxB,SAAWA,EACxBsB,EAAWI,KAAKF,KALxB,IAAK,IAAMD,KAAOL,EAAU,EAAjBK,GAQXf,EAAQc,MAEd,CAAChB,IAGH,IAAMV,EAAkB,SAAChB,GACrB,IAAM+C,EAAO,sBAAOnD,GAAP,CAAYI,IACzB4B,EAASmB,GH/CD,SAAAC,GACd,IAAMT,EAAS/C,IACXyD,EAAgB,GACpB,GAAKV,EAKH,IADAU,EAAgBnD,KAAK0C,MAAMD,IACTS,GAAK,CACrB,IAAME,EAAWD,EAAcD,GAAM,EACrCC,EAAcD,GAAME,OAGpBD,EAAcD,GAAM,OATtBC,EAAcD,GAAM,EAYtBrD,EAASsD,GGiCHE,CAAQnD,EAAQ2C,MAQpB,OACI,qCACI,qBAAKxD,UAAU,WAAWiE,SAPZ,SAACC,GACnB,IAAMC,EAAaD,EAAME,OAAOC,MAC1BC,EAAc/B,EAASgC,QAAO,SAAAxD,GAAO,OAAIA,EAAQE,KAAKuD,cAAcC,SAASN,EAAWK,kBAC9F7B,EAAkB2B,IAId,SACA,uBAAOI,KAAK,OAAMC,YAAY,sBAAsB3E,UAAU,YAElE,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,oBAAf,SAGY0C,EAAekC,KAAI,SAAA7D,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAA2Bc,gBAAiBA,EAA9D,cAAiCd,EAAQyC,UAInF,qBAAKxD,UAAU,iBAAf,SACI,cAAC,EAAD,CAAMS,KAAMA,EAAZ,yBC3DDoE,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,oBCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f326d25c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ddcfb382.png\";","import React from 'react';\r\nimport logo from '../images/logo.png';\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            {/* logo  */}\r\n            <img src={logo} className=\"logo\" alt=\"\" />\r\n            {/* navbar  */}\r\n            <nav>\r\n                <a href=\"/Shop\">Shop</a>\r\n                <a href=\"/Order\">Order</a>\r\n                <a href=\"/Inventory\">Inventory</a>\r\n                <a href=\"/Blog\">Blog</a>\r\n                <a href=\"/ContactUs\">ContactUs</a>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","// use local storage as your db for now\nconst addToDb = id => {\n  const exists = getDb();\n  let shopping_cart = {};\n  if (!exists) {\n    shopping_cart[id] = 1;\n  }\n  else {\n    shopping_cart = JSON.parse(exists);\n    if (shopping_cart[id]) {\n      const newCount = shopping_cart[id] + 1;\n      shopping_cart[id] = newCount;\n    }\n    else {\n      shopping_cart[id] = 1;\n    }\n  }\n  updateDb(shopping_cart);\n}\n\nconst getDb = () => localStorage.getItem('shopping_cart');\nconst updateDb = cart => {\n  localStorage.setItem('shopping_cart', JSON.stringify(cart));\n}\n\nconst removeFromDb = id => {\n  const exists = getDb();\n  if (!exists) {\n\n  }\n  else {\n    const shopping_cart = JSON.parse(exists);\n    delete shopping_cart[id];\n    updateDb(shopping_cart);\n  }\n}\n\nconst getStoredCart = () => {\n  const exists = getDb();\n  return exists ? JSON.parse(exists) : {};\n}\n\nconst clearTheCart = () => {\n  localStorage.removeItem('shopping_cart');\n}\n\nexport { addToDb, removeFromDb as deleteFromDb, clearTheCart, getStoredCart }\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee , faShoppingCart} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './Product.css'\r\nimport Rating from 'react-rating';\r\n\r\nconst Product = (props) => {\r\n    // console.log(props)\r\n    const {img,name,price,shipping,seller,star,starCount,stock} =(props.product)\r\n    const element = <FontAwesomeIcon icon={faShoppingCart} />\r\n    return (\r\n        <div className=\"product\">\r\n            <div img-content>\r\n\r\n                <img src={img} alt=\"\" />\r\n\r\n            </div>\r\n\r\n            <div className=\"information\">\r\n\r\n                <h3 className=\"product-name\">{name}</h3>\r\n                <p> By{seller}</p>\r\n                <h4>Price {price}</h4>\r\n                <p>only {stock} left in stock - order soon</p>\r\n                \r\n                <Rating readonly> </Rating>\r\n                <button  onClick={()=> props.handleAddToCart(props.product)} className=\"btn\">{element} Add To Cart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","import React from 'react';\r\nimport Product from '../Product/Product';\r\nimport './Cart.css'\r\n\r\nconst Cart = (props) => {\r\n\r\n        const { cart } = props\r\n\r\n            let totalQuantity = 0\r\n            let total = 0\r\n                for (const Product of cart){\r\n                    if (!Product.quantity){\r\n                        Product.quantity = 1\r\n                    }\r\n                    total = total +  Product.price * Product.quantity\r\n                    totalQuantity = totalQuantity+Product.quantity\r\n                }\r\n        const shiping = 0 ? 15 : 0;\r\n        const tax = (total + shiping) * 0.10\r\n        const grandTotal = total + shiping + tax \r\n\r\n    return (\r\n        <div>\r\n            <h3>Product Summary</h3>\r\n            <h3>Items Order {totalQuantity}</h3>\r\n            <h4>Total {total.toFixed(2)}</h4>\r\n            <h4>Tax {tax.toFixed(2)}</h4>\r\n            <h4>GrandTotal {grandTotal.toFixed(2)}</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React, { useEffect, useState } from 'react';\r\nimport { addToDb, getStoredCart } from '../../utilities/fakedb';\r\nimport Cart from '../Cart/Cart';\r\nimport Product from '../Product/Product';\r\nimport './Shop.css'\r\n\r\nconst Shop = () => {\r\n    // state \r\n    const [products,setProducts] = useState([])\r\n    // add to cart \r\n    const [cart,setCart] = useState([])\r\n    // display product \r\n    const [displayProduct,setDisplayProduct] = useState([])\r\n    \r\n    // useEffect \r\n    useEffect(()=>{\r\n\r\n        fetch('./Products.JSON')\r\n        .then(Response => Response.json())\r\n        .then(data => {\r\n            setProducts(data);\r\n            setDisplayProduct(data)\r\n        })\r\n        }\r\n\r\n    ,[])\r\n\r\n    // side effect \r\n    useEffect(()=>{\r\n        \r\n        if(products.length){\r\n            const saveCart = getStoredCart()\r\n            const storedCart = []\r\n            for (const key in saveCart){\r\n                const addedProduct = products.find(product => product.key === key)\r\n                if(addedProduct){\r\n                    const quantity = saveCart[key]\r\n                    addedProduct.quantity = quantity\r\n                    storedCart.push(addedProduct)\r\n                }\r\n            }\r\n            setCart(storedCart)\r\n        }\r\n    },[products])\r\n\r\n    // add to cart handale \r\n    const handleAddToCart = (Product) => {\r\n        const newCart = [...cart,Product]\r\n        setCart (newCart)\r\n        // localStorage\r\n        addToDb(Product.key)\r\n    }\r\n\r\n    const handleSearch =  (event)=>{\r\n        const searchText = event.target.value\r\n        const mathProduct = products.filter(product => product.name.toLowerCase().includes(searchText.toLowerCase()))\r\n        setDisplayProduct(mathProduct)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"inputBox\" onChange={handleSearch}> \r\n            <input type=\"text\"placeholder=\"Search Your Product\" className=\"input\"/>\r\n        </div>\r\n        <div className=\"shop-container\">\r\n            <div className=\"product-container\">\r\n\r\n                    {\r\n                        displayProduct.map(product => <Product product={product} key ={product.key}handleAddToCart={handleAddToCart}> </Product>)\r\n                    }\r\n\r\n            </div>\r\n            <div className=\"cart-container\">\r\n                <Cart cart={cart}> </Cart>\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Shop;","\nimport Header from './components/Header';\nimport Shop from './components/Shop/Shop';\n\nfunction App() {\n  return (\n    <div>\n      <Header></Header>\n      <Shop> </Shop>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}